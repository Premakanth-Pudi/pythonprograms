name: API Automation Workflow
on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:

  api-automation-workflow:

    runs-on: ubuntu-latest


    steps:
      
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ env.GITHUB_REF }}

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '23'




      - name: Set up Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install newman and create reports directory
        run: |
          echo "Current working directory: $(pwd)"
          npm install -g newman@latest
          npm install -g newman-reporter-allure@latest
          npm install -g allure-commandline@latest
          mkdir -p ./api-automation/Reports      #Ensure reports folder exists
          echo "Reports directory created: $(ls -al ./api-automation)"
      - name: Debug Directory Structure
        run: |
          echo "Current working directory: $(pwd)"
          ls -R

      - name: Substitute wildcard values
        working-directory: ./api-automation
        run: |
          sed -i 's|{{__AUTH_URL__}}|${{ env.AUTH_URL }}|' postman_environment.json
          sed -i 's|{{__AUTH_SCOPE__}}|${{ env.AUTH_SCOPE }}|' postman_environment.json
          sed -i 's|{{__AUTH_CLIENT_ID__}}|${{ secrets.API_AUTOMATION_AUTH_CLIENT_ID }}|' postman_environment.json
          sed -i 's|{{__AUTH_CLIENT_SECRET__}}|${{ secrets.API_AUTOMATION_AUTH_CLIENT_SECRET }}|' postman_environment.json
          sed -i 's|{{__SUST_SVC_BASE_URL__}}|${{ env.SUST_SVC_BASE_URL }}|' postman_environment.json

      - name: Set execute permissions for PostmanTestCollectionRunner.sh
        run: chmod +x ./api-automation/PostmanTestCollectionRunner.sh

      - name: Run Postman Tests
        id: testexecutionstep
        working-directory: ./api-automation
        run: ./PostmanTestCollectionRunner.sh
        continue-on-error: true

      - name: Generate report
        run: |
          mkdir -p ./api-automation/allure-report  # Ensure the allure-report folder exists
          allure generate ./api-automation/Reports/ -o ./api-automation/allure-report

      
        

      


      # - name: Rename report html
      #   run: |
      #     cd ./api-automation/allure-report
      #     ls -a
      #     mv index.html api-automation-report.html

      - name: Upload automation report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: api-automation-report-artifact
          path: ./api-automation/allure-report

      - name: Checkout reports branch
        uses: actions/checkout@v2
        with:
          ref: master
          fetch-depth: 0



      # - name: Download automation report artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: api-automation-report-artifact
      #     path: ${{ env.ENV_SPECIFIC_REPORT_FOLDER }}/latest/

      - name: Push files to reports-branch
        run: |
          now=$(date +'%Y-%m-%d')
          git config --global user.email "premkanthpudi2002@gmail.com"
          git config --global user.name "Premakanth-Pudi"
          git add .
          git commit -m "Publishing ${{ github.event.inputs.env }} automation report for $now"
          git push --set-upstream origin master


      - name: Delete artifact
        uses: geekyeggo/delete-artifact@v1
        with:
          name: api-automation-report-artifact

